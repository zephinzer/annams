sudo: required
language: node_js
node_js:
  - "lts/*"
notifications:
  email:
    recipients:
    - "${MAINTAINER_EMAIL}"
services:
  - docker
stages:
  - versioning
  - BuildDependencies
  - BuildApplications
  - test
  - release
jobs:
  include:
  - stage: BuildDependencies
    env:
      - ENV: development
    script:
    - git log -n 1 --format='%s' > ./.commit_message;
    - cat package.json | jq '.dependencies,.devDependencies' | md5sum | cut -f 1 -d ' ' > ./.dependency_hash
    - |
      COMMIT_MESSAGE="$(cat ./.commit_message)";
      curl -s https://index.docker.io/v1/repositories/zephinzer/annams/tags | jq '.[].name' | grep "deps-${ENV}-$(cat ./.dependency_hash)";
      if [ "$?" != "0" ] || [ -z "${COMMIT_MESSAGE##*"[force build]"*}" ]; then
        ENV=${ENV} npm run build-deps -- "$(cat ./.dependency_hash)";
        docker login -u "${DH_USERNAME}" -p "${DH_PASSWORD}";
        docker tag zephinzer/annams:deps-${ENV}-$(cat ./.dependency_hash) zephinzer/annams:deps-${ENV}-latest;
        docker push zephinzer/annams:deps-${ENV}-$(cat ./.dependency_hash);
        docker push zephinzer/annams:deps-${ENV}-latest;
        docker logout;
      fi;
  - stage: BuildDependencies
    env:
      - ENV: production
    script:
    - git log -n 1 --format='%s' > ./.commit_message;
    - cat package.json | jq '.dependencies,.devDependencies' | md5sum | cut -f 1 -d ' '  > ./.dependency_hash
    - |
      COMMIT_MESSAGE="$(cat ./.commit_message)";
      curl -s https://index.docker.io/v1/repositories/zephinzer/annams/tags | jq '.[].name' | grep "deps-${ENV}-$(cat ./.dependency_hash)";
      if [ "$?" != "0" ] || [ -z "${COMMIT_MESSAGE##*"[force build]"*}" ]; then
        ENV=${ENV} npm run build-deps -- "$(cat ./.dependency_hash)";
        docker login -u ${DH_USERNAME} -p ${DH_PASSWORD};
        docker tag zephinzer/annams:deps-${ENV}-$(cat ./.dependency_hash) zephinzer/annams:deps-${ENV}-latest;
        docker push zephinzer/annams:deps-${ENV}-$(cat ./.dependency_hash);
        docker push zephinzer/annams:deps-${ENV}-latest;
        docker logout;
      fi;
  - stage: BuildApplications
    env:
      - ENV: development
    script:
    - cat package.json | jq '.dependencies,.devDependencies' | md5sum | cut -f 1 -d ' '  > ./.dependency_hash;
    - git log -n 1 --format='%H' > ./.commit_hash;
    - ENV=${ENV} DEPENDENCY_VERSION="$(cat ./.dependency_hash)" npm run build;
    - docker tag zephinzer/annams:${ENV}-latest zephinzer/annams:${ENV}-$(cat ./.commit_hash);
    - docker login -u ${DH_USERNAME} -p ${DH_PASSWORD};
    - docker push zephinzer/annams:${ENV}-latest;
    - docker push zephinzer/annams:${ENV}-$(cat ./.commit_hash);
    - docker logout;
  - stage: BuildApplications
    env:
      - ENV: production
    script:
    - cat package.json | jq '.dependencies,.devDependencies' | md5sum | cut -f 1 -d ' '  > ./.dependency_hash;
    - git log -n 1 --format='%H' > ./.commit_hash;
    - ENV=${ENV} DEPENDENCY_VERSION="$(cat ./.dependency_hash)" npm run build;
    - docker tag zephinzer/annams:${ENV}-latest zephinzer/annams:${ENV}-$(cat ./.commit_hash);
    - docker login -u ${DH_USERNAME} -p ${DH_PASSWORD};
    - docker push zephinzer/annams:${ENV}-latest;
    - docker push zephinzer/annams:${ENV}-$(cat ./.commit_hash);
    - docker logout;
  - stage: test
    env:
      - NPM_TASK: test-deployment
    script:
    - npm run ${NPM_TASK}
  - stage: test
    env:
      - TASK: test-lint
    script:
    - git log -n 1 --format='%H' > ./.commit_hash
    - export ANNAMS_DEV_IMAGE="zephinzer/annams:dev-$(cat ./.commit_hash)"
    - docker pull "${ANNAMS_DEV_IMAGE}"
    - docker-compose -f ./provisioning/deployments/docker/test/docker-compose.yml run ${TASK}
  - stage: test
    env:
      - TASK: test-sec
    script:
    - git log -n 1 --format='%H' > ./.commit_hash
    - export ANNAMS_DEV_IMAGE="zephinzer/annams:dev-$(cat ./.commit_hash)"
    - docker pull "${ANNAMS_DEV_IMAGE}"
    - docker-compose -f ./provisioning/deployments/docker/test/docker-compose.yml run ${TASK}
  - stage: test
    env:
      - TASK: test
    script:
    - git log -n 1 --format='%H' > ./.commit_hash
    - export ANNAMS_DEV_IMAGE="zephinzer/annams:dev-$(cat ./.commit_hash)"
    - docker pull "${ANNAMS_DEV_IMAGE}"
    - docker-compose -f ./provisioning/deployments/docker/test/docker-compose.yml run ${TASK}
  - stage: release
    env:
      - PLATFORM: github.com
    script:
    - git checkout "${TRAVIS_BRANCH}";
    - git reset --hard "$(cat ./.commit_hash)";
    - git log -n 1 --format='%H' > ./.commit_hash;
    - git log -n 1 --format='%s' > ./.commit_message;
    - |
      if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
        COMMIT_MESSAGE="$(cat ./.commit_message)";
        if [ -z "${COMMIT_MESSAGE##*"[major release]"*}" ]; then npm run version-major-bump;
        elif [ -z "${COMMIT_MESSAGE##*"[minor release]"*}" ]; then npm run version-minor-bump;
        else npm run version-patch-bump;
        fi;
        git remote set-url origin https://${GH_USERNAME}:${GH_ACCESS_TOKEN}@${PLATFORM}/${GIT_ORIGIN_REMOTE_PATH};
        git push origin "${TRAVIS_BRANCH}" --tags;
      fi;
  - stage: release
    env:
      - PLATFORM: npmjs.org
    script:
    - ./provisioning/scripts/publish-npm.sh